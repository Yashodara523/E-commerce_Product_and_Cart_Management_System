{"ast":null,"code":"// Action Types\nexport const FETCH_PRODUCTS_REQUEST = 'FETCH_PRODUCTS_REQUEST';\nexport const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS';\nexport const FETCH_PRODUCTS_FAILURE = 'FETCH_PRODUCTS_FAILURE';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const PLACE_ORDER_REQUEST = 'PLACE_ORDER_REQUEST';\nexport const PLACE_ORDER_SUCCESS = 'PLACE_ORDER_SUCCESS';\nexport const PLACE_ORDER_FAILURE = 'PLACE_ORDER_FAILURE';\n\n// Action Creators\n\n// Fetch products (with mock data)\nexport const fetchProductsRequest = () => {\n  return dispatch => {\n    const mockProducts = [{\n      id: 1,\n      name: \"Product 1\",\n      price: 20,\n      availableQuantity: 10,\n      imageUrl: \"http://example.com/product1.jpg\" // Mock Image URL\n    }, {\n      id: 2,\n      name: \"Product 2\",\n      price: 30,\n      availableQuantity: 5,\n      imageUrl: \"http://example.com/product2.jpg\" // Mock Image URL\n    }];\n\n    // Dispatch success action with mock products\n    dispatch({\n      type: FETCH_PRODUCTS_SUCCESS,\n      payload: mockProducts\n    });\n  };\n};\n\n// Fetch Products Success Action\nexport const fetchProductsSuccess = products => ({\n  type: FETCH_PRODUCTS_SUCCESS,\n  payload: products\n});\n\n// Fetch Products Failure Action\nexport const fetchProductsFailure = error => ({\n  type: FETCH_PRODUCTS_FAILURE,\n  payload: error\n});\n\n// Add to Cart\nexport const addToCart = product => ({\n  type: ADD_TO_CART,\n  payload: product\n});\n\n// Update Cart Quantity\nexport const updateCartQuantity = (cartItemId, quantity) => ({\n  type: UPDATE_CART_QUANTITY,\n  payload: {\n    cartItemId,\n    quantity\n  }\n});\n\n// Remove from Cart\nexport const removeFromCart = cartItemId => ({\n  type: REMOVE_FROM_CART,\n  payload: cartItemId\n});\n\n// Place Order Request\nexport const placeOrderRequest = () => ({\n  type: PLACE_ORDER_REQUEST\n});\n\n// Place Order Success\nexport const placeOrderSuccess = () => ({\n  type: PLACE_ORDER_SUCCESS\n});\n\n// Place Order Failure\nexport const placeOrderFailure = error => ({\n  type: PLACE_ORDER_FAILURE,\n  payload: error\n});","map":{"version":3,"names":["FETCH_PRODUCTS_REQUEST","FETCH_PRODUCTS_SUCCESS","FETCH_PRODUCTS_FAILURE","ADD_TO_CART","UPDATE_CART_QUANTITY","REMOVE_FROM_CART","PLACE_ORDER_REQUEST","PLACE_ORDER_SUCCESS","PLACE_ORDER_FAILURE","fetchProductsRequest","dispatch","mockProducts","id","name","price","availableQuantity","imageUrl","type","payload","fetchProductsSuccess","products","fetchProductsFailure","error","addToCart","product","updateCartQuantity","cartItemId","quantity","removeFromCart","placeOrderRequest","placeOrderSuccess","placeOrderFailure"],"sources":["C:/Users/user/Desktop/E-commerce_Product_and_Cart_Management_System/src/redux/actions.js"],"sourcesContent":["// Action Types\r\nexport const FETCH_PRODUCTS_REQUEST = 'FETCH_PRODUCTS_REQUEST';\r\nexport const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS';\r\nexport const FETCH_PRODUCTS_FAILURE = 'FETCH_PRODUCTS_FAILURE';\r\n\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\n\r\nexport const PLACE_ORDER_REQUEST = 'PLACE_ORDER_REQUEST';\r\nexport const PLACE_ORDER_SUCCESS = 'PLACE_ORDER_SUCCESS';\r\nexport const PLACE_ORDER_FAILURE = 'PLACE_ORDER_FAILURE';\r\n\r\n// Action Creators\r\n\r\n// Fetch products (with mock data)\r\nexport const fetchProductsRequest = () => {\r\n  return (dispatch) => {\r\n    const mockProducts = [\r\n      {\r\n        id: 1,\r\n        name: \"Product 1\",\r\n        price: 20,\r\n        availableQuantity: 10,\r\n        imageUrl: \"http://example.com/product1.jpg\", // Mock Image URL\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Product 2\",\r\n        price: 30,\r\n        availableQuantity: 5,\r\n        imageUrl: \"http://example.com/product2.jpg\", // Mock Image URL\r\n      },\r\n    ];\r\n\r\n    // Dispatch success action with mock products\r\n    dispatch({\r\n      type: FETCH_PRODUCTS_SUCCESS,\r\n      payload: mockProducts,\r\n    });\r\n  };\r\n};\r\n\r\n// Fetch Products Success Action\r\nexport const fetchProductsSuccess = (products) => ({\r\n  type: FETCH_PRODUCTS_SUCCESS,\r\n  payload: products,\r\n});\r\n\r\n// Fetch Products Failure Action\r\nexport const fetchProductsFailure = (error) => ({\r\n  type: FETCH_PRODUCTS_FAILURE,\r\n  payload: error,\r\n});\r\n\r\n// Add to Cart\r\nexport const addToCart = (product) => ({\r\n  type: ADD_TO_CART,\r\n  payload: product,\r\n});\r\n\r\n// Update Cart Quantity\r\nexport const updateCartQuantity = (cartItemId, quantity) => ({\r\n  type: UPDATE_CART_QUANTITY,\r\n  payload: { cartItemId, quantity },\r\n});\r\n\r\n// Remove from Cart\r\nexport const removeFromCart = (cartItemId) => ({\r\n  type: REMOVE_FROM_CART,\r\n  payload: cartItemId,\r\n});\r\n\r\n// Place Order Request\r\nexport const placeOrderRequest = () => ({\r\n  type: PLACE_ORDER_REQUEST,\r\n});\r\n\r\n// Place Order Success\r\nexport const placeOrderSuccess = () => ({\r\n  type: PLACE_ORDER_SUCCESS,\r\n});\r\n\r\n// Place Order Failure\r\nexport const placeOrderFailure = (error) => ({\r\n  type: PLACE_ORDER_FAILURE,\r\n  payload: error,\r\n});\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,sBAAsB,GAAG,wBAAwB;AAC9D,OAAO,MAAMC,sBAAsB,GAAG,wBAAwB;AAC9D,OAAO,MAAMC,sBAAsB,GAAG,wBAAwB;AAE9D,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAElD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;;AAExD;;AAEA;AACA,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EACxC,OAAQC,QAAQ,IAAK;IACnB,MAAMC,YAAY,GAAG,CACnB;MACEC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,WAAW;MACjBC,KAAK,EAAE,EAAE;MACTC,iBAAiB,EAAE,EAAE;MACrBC,QAAQ,EAAE,iCAAiC,CAAE;IAC/C,CAAC,EACD;MACEJ,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,WAAW;MACjBC,KAAK,EAAE,EAAE;MACTC,iBAAiB,EAAE,CAAC;MACpBC,QAAQ,EAAE,iCAAiC,CAAE;IAC/C,CAAC,CACF;;IAED;IACAN,QAAQ,CAAC;MACPO,IAAI,EAAEhB,sBAAsB;MAC5BiB,OAAO,EAAEP;IACX,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMQ,oBAAoB,GAAIC,QAAQ,KAAM;EACjDH,IAAI,EAAEhB,sBAAsB;EAC5BiB,OAAO,EAAEE;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,oBAAoB,GAAIC,KAAK,KAAM;EAC9CL,IAAI,EAAEf,sBAAsB;EAC5BgB,OAAO,EAAEI;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,SAAS,GAAIC,OAAO,KAAM;EACrCP,IAAI,EAAEd,WAAW;EACjBe,OAAO,EAAEM;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,kBAAkB,GAAGA,CAACC,UAAU,EAAEC,QAAQ,MAAM;EAC3DV,IAAI,EAAEb,oBAAoB;EAC1Bc,OAAO,EAAE;IAAEQ,UAAU;IAAEC;EAAS;AAClC,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,cAAc,GAAIF,UAAU,KAAM;EAC7CT,IAAI,EAAEZ,gBAAgB;EACtBa,OAAO,EAAEQ;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMG,iBAAiB,GAAGA,CAAA,MAAO;EACtCZ,IAAI,EAAEX;AACR,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMwB,iBAAiB,GAAGA,CAAA,MAAO;EACtCb,IAAI,EAAEV;AACR,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMwB,iBAAiB,GAAIT,KAAK,KAAM;EAC3CL,IAAI,EAAET,mBAAmB;EACzBU,OAAO,EAAEI;AACX,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}